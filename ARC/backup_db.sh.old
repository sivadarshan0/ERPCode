#!/bin/bash

# โโโ Configurable Variables โโโโโโโโโโโโโโโโโโโโโ
DB_USER="root"
DB_PASS="toor"       # Replace with your actual password
BACKUP_DIR="/home/admin/ERPCode/Site/DBBkp"
LOG_SOURCE="/var/www/html/logs"
LOG_DEST="/home/admin/ERPCode/Site/logs"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
DB_FILE="$BACKUP_DIR/db_$TIMESTAMP.sql"

# โโโ 1. Ensure destination folders exist โโโโโโโโ
mkdir -p "$BACKUP_DIR"
mkdir -p "$LOG_DEST"

# โโโ 2. Dump full database โโโโโโโโโโโโโโโโโโโโโโ
echo "๐ข๏ธ  Backing up database to $DB_FILE"
mysqldump -u "$DB_USER" -p"$DB_PASS" --all-databases > "$DB_FILE"

if [ $? -eq 0 ]; then
  echo "โ Database backup complete."
else
  echo "โ Database backup failed."
  exit 1
fi

# โโโ 3. Copy log files โโโโโโโโโโโโโโโโโโโโโโโโโโ
echo "๐ Copying logs from $LOG_SOURCE to $LOG_DEST..."
cp -r "$LOG_SOURCE/"* "$LOG_DEST/"

echo "โ Log copy complete."

# โโโ 4. Cleanup old backups โโโโโโโโโโโโโโโโโโโโโ
MAX_BACKUPS=7
echo "๐งน Keeping only the last $MAX_BACKUPS backups in $BACKUP_DIR..."
cd "$BACKUP_DIR" || exit 1
ls -1t *.sql | tail -n +$((MAX_BACKUPS + 1)) | xargs -r rm --
echo "๐๏ธ  Old backups cleaned up."

# โโโ 5. Git status reminder โโโโโโโโโโโโโโโโโโโโโ
echo "๐ You can now add, commit, and push DBBkp and logs via Git."

# โโโ 6. Auto Commit to Git โโโโโโโโโโโโโโโโโโโโโโ
cd /home/admin/ERPCode || exit
git pull origin main --rebase
git add Site/DBBkp/ Site/logs/
git commit -m "๐ Auto backup: $TIMESTAMP"
git push origin main
